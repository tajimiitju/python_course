PYTHON DATA STRUCTURE
SET:

mySet = set()

dir(mySet)



#add
help(mySet.add)

mySet.add(5)
mySet.add('Five')
mySet.add(True)
mySet.add(5.55)
mySet.add(5 + 5.5j)
len(mySet)


mySet.add(5)

len(mySet)

#remove discard
help(mySet.remove)
help(mySet.discard)

mySet.remove('Five')
mySet.remove('Five')

mySet.discard(5)
mySet.discard(5)


#Faster Way to make set
mySet2 = set([1,2.3,False,'Two'])
len(mySet2)


mySet2.clear()
len(mySet2)



#Intergers in 1-10
oddSeries 		= set([1,3,5,7,9])
evenSeries 		= set([2,4,6,8,10])
primeSeries 	= set([2,3,5,7])
compositeSeries = set([4,6,8,9,10])


oddSeries.union(evenSeries)
oddSeries.intersection(primeSeries)
primeSeries.union(compositeSeries)



#conditions
6 in evenSeries
9 not in evenSeries







Lists :
myList = ['aam','jaam','kathal','komola','narikel']
len(myList)


dir(myList)
help(myList.append)
myList.append('lichu')

len(myList)

print(myList[2])
print(myList[-1])
print(myList[-4])


#Slicing
print(myList[2:5])
print(myList[-4:-1])


myList2 = [1, 2, 3, 4, 5, 1, 2] #A set can store duplicate values.
print( myList2)


#concatintion
print(myList + myList2)
myList.extend(myList2)

#Show each functions of List




# loops

mL = [1,2,3,4,5]

for m in mL




mL = [1,2,3,4,5]

for m in mL:
    if m == 3:
        print("found")
#         break
        continue
    
    print (m)
	
	
	
	
list(range(5))



for m in range(6):
    print (m)
	
	
	
x = 0
while x < 10:
    print(x)
    x +=1
	
	
	
	
	
	
	